{"version":3,"file":"util.js","sourceRoot":"","sources":["../../src/lib/util.ts"],"names":[],"mappings":";;AAAA,MAAM,eAAe,GAAG,CAAC,MAAW,EAAE,IAAa,EAAO,EAAE;IAC1D,IAAI,CAAC,IAAI;QAAE,OAAO,MAAM,CAAA;IACxB,IAAI,KAAK,qBAAQ,MAAM,CAAE,CAAA;IACzB,IAAI,MAAM,GAAkB,EAAE,CAAA;IAC9B,IAAI,EAAE,GAAa,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;IAClC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;QAClC,IAAI,CAAC,KAAK,EAAE,CAAC,MAAM,GAAG,CAAC,EAAE;YACvB,KAAK,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAA;SACrB;aACI;YACH,MAAM,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAA;SACtB;KACF;IACD,OAAO,MAAM,IAAI,IAAI,CAAA;AACvB,CAAC,CAAA;AAEQ,0CAAe","sourcesContent":["const getNestedObject = (parent: any, path?: string): any => {\n  if (!path) return parent\n  let child = { ...parent }\n  let result: object | null = {}\n  let id: string[] = path.split('.')\n  for (let i = 0; i < id.length; i++) {\n    if (i !== id.length - 1) {\n      child = child[id[i]]\n    }\n    else {\n      result = child[id[i]]\n    }\n  }\n  return result || null\n}\n\nexport { getNestedObject } "]}