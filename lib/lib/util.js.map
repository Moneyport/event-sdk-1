{"version":3,"file":"util.js","sourceRoot":"","sources":["../../src/lib/util.ts"],"names":[],"mappings":";;AAAA,MAAM,eAAe,GAAG,CAAC,MAAW,EAAE,IAAa,EAAO,EAAE;IAC1D,IAAI,MAAM,GAAG,EAAE,CAAA;IACf,IAAI,CAAC,IAAI;QAAE,MAAM,GAAG,MAAM,CAAA;SACrB;QACH,IAAI,KAAK,qBAAQ,MAAM,CAAE,CAAA;QACzB,IAAI,EAAE,GAAa,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,CAAA;QAClC,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;YAClC,IAAI,CAAC,KAAK,EAAE,CAAC,MAAM,GAAG,CAAC,EAAE;gBACvB,KAAK,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAA;aACrB;iBACI;gBACH,MAAM,GAAG,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAA;aACtB;SACF;KACF;IACD,OAAO,MAAM,CAAA;AACf,CAAC,CAAA;AAEQ,0CAAe","sourcesContent":["const getNestedObject = (parent: any, path?: string): any => {\n  let result = {}\n  if (!path) result = parent\n  else {\n    let child = { ...parent }\n    let id: string[] = path.split('.')\n    for (let i = 0; i < id.length; i++) {\n      if (i !== id.length - 1) {\n        child = child[id[i]]\n      }\n      else {\n        result = child[id[i]]\n      }\n    }\n  }\n  return result\n}\n\nexport { getNestedObject } "]}